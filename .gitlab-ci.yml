stages:
  - build
  - package
  - public_test_repo
  - test
  - cleanup

build:
  stage: build
  script:
    - docker build -t arch-selinux-build .

package:
  stage: package
  script: |
    mkdir pkgs
    docker run -v "$(pwd)/pkgs:/packages" --rm arch-selinux-build

  artifacts:
    paths:
      - pkgs/*

create public testing repo:
  stage: public_test_repo
  script: |
    rm -vf /srv/http/selinux-testing/*
    cp -v pkgs/* /srv/http/selinux-testing/
    repo-add /srv/http/selinux-testing/selinux-testing.db.tar.xz /srv/http/selinux-testing/*

prepare testing environment:
  stage: test
  allow_failure: true
  script: |
    qemu-img create -f raw archlinux.raw 8G
    sudo losetup /dev/loop0 -P archlinux.raw
    sudo parted /dev/loop0 mklabel msdos
    sudo parted -a optimal /dev/loop0 mkpart primary 0% 100%
    sudo parted -s /dev/loop0 set 1 boot on
    mkfs.ext4 /dev/loop0p1
    tune2fs -L ROOT /dev/loop0p1
    sudo mount /dev/loop0p1 /tmp/arch

unmount loop devices:
  stage: cleanup
  script: |
    lsblk
